{
  "version": 3,
  "sources": ["../src/effect.ts", "../../shared/src/index.ts", "../src/reactiveEffect.ts", "../src/baseHandler.ts", "../src/reactive.ts"],
  "sourcesContent": ["export function effect(fn, options?) {\r\n  const _effect = new ReactiveEffect(fn, () => {\r\n    _effect.run()\r\n  })\r\n  _effect.run()\r\n\r\n  return _effect\r\n}\r\n\r\nexport let activeEffect;\r\n\r\nclass ReactiveEffect {\r\n  public active = true\r\n  public id = crypto.randomUUID()\r\n  _trackId = 0\r\n  deps = []\r\n  _depsLength = 0\r\n  constructor(public fn, public scheduler) {}\r\n  \r\n  run() {\r\n    console.log('effect run');\r\n    \r\n    if(!this.active) {\r\n      return this.fn();\r\n    }\r\n    let lastEffect = activeEffect\r\n    try{\r\n      activeEffect = this\r\n      return this.fn()\r\n    }finally{\r\n      activeEffect = lastEffect\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\nexport function trackEffect(effect, dep) {\r\n  dep.set(effect, effect._trackId)\r\n  effect.deps[effect._depsLength++] = dep\r\n}\r\n\r\nexport function triggerEffects(dep) {\r\n  for (const effect of dep.keys()) {\r\n    if(effect.scheduler) {\r\n      effect.scheduler()\r\n    }\r\n  }\r\n}", "export function isObject(value){\r\n  return typeof value === \"object\" && value !== null;\r\n}", "import { activeEffect, trackEffect, triggerEffects } from \"./effect\";\r\n\r\nconst targetMap = new WeakMap() \r\n\r\nfunction createDep (cleanup, name) {\r\n  let dep = new Map() as any\r\n  dep.cleanup = cleanup\r\n  dep.name = name\r\n  return dep\r\n}\r\nexport function track(target, key) {\r\n  if(activeEffect) {\r\n    // console.log(key, activeEffect);\r\n    let depsMap = targetMap.get(target)\r\n    if(!depsMap) {\r\n      targetMap.set(target, depsMap = new Map())\r\n    }\r\n\r\n    let dep = depsMap.get(key)\r\n    if(!dep) {\r\n      depsMap.set(key, dep = createDep(() => depsMap.delete(key), key))\r\n    }\r\n\r\n    trackEffect(activeEffect, dep)\r\n    \r\n  }\r\n}\r\n\r\nexport function trigger(target, key, value, oldValue) {\r\n  const depsMap = targetMap.get(target)\r\n  if(!depsMap) return\r\n  const dep = depsMap.get(key)\r\n  if(dep) {\r\n    triggerEffects(dep)\r\n  }\r\n}", "import { track, trigger } from \"./reactiveEffect\";\r\n\r\nexport enum ReactiveFlags {\r\n  IS_REACTIVE = \"__v_isReactive\"\r\n}\r\n\r\nexport const mutableHandlers: ProxyHandler<any> = {\r\n  get(target, key, receiver) {\r\n    console.log(key, 'get');\r\n    if(key === ReactiveFlags.IS_REACTIVE) {\r\n      return true\r\n    }\r\n    track(target, key)\r\n    \r\n    return Reflect.get(target, key, receiver)\r\n  },\r\n  set(target, key, value, receiver) {\r\n    console.log(key, 'set');\r\n\r\n    let oldValue = target[key]\r\n    let result = Reflect.set(target, key, value, receiver);\r\n    if(oldValue!==value) {\r\n      trigger(target, key, value, oldValue)\r\n    }\r\n    return result\r\n  }\r\n\r\n}", "import { isObject } from \"@vue/shared\";\r\nimport { ReactiveFlags, mutableHandlers } from \"./baseHandler\";\r\n\r\n\r\nconst reactiveMap = new WeakMap()\r\n\r\nfunction createReactiveObject(target) {\r\n  //\u4E0D\u662F\u5BF9\u8C61\u7684\u60C5\u51B5\u5224\u65AD\r\n  if(!isObject(target)) {\r\n    return target;\r\n  }\r\n\r\n  //\u5BF9reactive\u8FC7\u7684\u5BF9\u8C61\u518D\u6B21reactive\u7684\u60C5\u51B5\u5224\u65AD ->\r\n  //\u8FD9\u91CC\u8BBF\u95EEtarget\u7684'ReactiveFlags.IS_REACTIVE', \u5982\u679C\u88AB\u4EE3\u7406\u8FC7, \u5C31\u4F1A\u8D70\u5230get\u65B9\u6CD5, get\u65B9\u6CD5\u8FD4\u56DEtrue\r\n  if(target[ReactiveFlags.IS_REACTIVE]) {\r\n    return target\r\n  }\r\n\r\n  //\u5BF9\u4E00\u4E2A\u5BF9\u8C61reactive\u4E24\u6B21\u7684\u60C5\u51B5\u5224\u65AD\r\n  const exitsProxy = reactiveMap.get(target)\r\n  if(exitsProxy) {\r\n    return exitsProxy\r\n  }\r\n  const proxy = new Proxy(target, mutableHandlers)\r\n  reactiveMap.set(target, proxy)\r\n  return proxy\r\n}\r\n\r\nexport function reactive(target) {\r\n  return createReactiveObject(target)\r\n}"],
  "mappings": "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",
  "names": ["effect"]
}
